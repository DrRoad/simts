% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kalman_filter_gen.R
\name{kalman_filter}
\alias{kalman_filter}
\title{Kalman Filter Estimation}
\usage{
kalman_filter(model, y, estimate_model = F, model_to_estimate = NULL,
  method = "mle")
}
\arguments{
\item{model}{a \code{ts.model} object with specified parameters values}

\item{y}{a \code{lts} object}

\item{estimate_model}{a bolean indicating whether or not to estimate the parameters values of a provided model, default is \code{False}}

\item{model_to_estimate}{a \code{ts.model} object without parameters values specified if \code{estimate_model} is set to \code{True}}

\item{method}{specify the method of estimation if \code{estimate_model} is set to \code{True} and \code{model_to_estimate} is provided}
}
\value{
a \code{KF} object with the structure:
\describe{
\item{X_h}{Estimated states for each time \code{t}}
\item{P_h}{Estimated variance-covariance matrix for each time \code{t}}
\item{y}{Observed time serie}
}
}
\description{
Compute the Kalman Filter estimation for the sum of any combinations of AR processes, RW, WN and DR
}
\details{
Compute a kalman filter on a state space model which
can be composed of the sum of AR(), RW(), DR() and WN() processes.
Note that there can be any ammount of AR() processes while RW(), DR() and WN()
processes are limited to 1. The function can both estimate the model parameter
from a given model and apply the kalman filter or directly apply the kalman 
filter with specified parameters. The function takes as input the
model which is the defined model and y which is the observed time serie.
If estimate_model is set to False (by default), the user need to provide a model
and its parameters (a ts.model class object). If estimate_model is set to True, the user just need to provide
the selected model to estimate and the estimation method (see function estimate)
}
\examples{
#Filter a 2*AR1 + DR + RW + WN process
set.seed(123)
model = AR(.3, 2) + AR(.5,3) + DR(.1) + RW(3) + WN(4) 
n = 250
y = gen_lts(n = n, model = model)
my_res = kalman_filter(model = model, y = y)
}
\author{
Lionel Voirol
}
